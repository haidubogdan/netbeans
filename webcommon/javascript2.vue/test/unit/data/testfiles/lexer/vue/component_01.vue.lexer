Token #0 HTML [<!--\nHere we are reactively binding element attributes / properties to the state.\nThe :title syntax is short for v-bind:title.\n-->\n\n<script setup>]
Token #1 JAVASCRIPT [\nimport { ref } from 'vue'\n\nconst message = ref('Hello World!')\nconst isRed = ref(true)\nconst color = ref('green')\n\nfunction toggleRed() {\n  isRed.value = !isRed.value\n}\n\nfunction toggleColor() {\n  color.value = color.value === 'green' ? 'blue' : 'green'\n}\n]
Token #2 HTML [</script>\n\n]
Token #3 HTML [<template>\n  <p>\n    <span ]
Token #4 VUE_DIRECTIVE [:title]
Token #5 JAVASCRIPT_ATTR [=]
Token #6 QUOTE_ATTR ["]
Token #7 JAVASCRIPT_ATTR [message]
Token #8 QUOTE_ATTR ["]
Token #9 HTML [>\n      Hover your mouse over me for a few seconds to see my dynamically bound title!\n    </span>\n  </p>\n\n  <!--\n  class bindings have special support for objects and arrays\n  in addition to plain strings\n  -->\n  <p ]
Token #10 VUE_DIRECTIVE [:class]
Token #11 JAVASCRIPT_ATTR [=]
Token #12 QUOTE_ATTR ["]
Token #13 JAVASCRIPT_ATTR [{ red: isRed }]
Token #14 QUOTE_ATTR ["]
Token #15 HTML [ ]
Token #16 VUE_DIRECTIVE [@click]
Token #17 JAVASCRIPT_ATTR [=]
Token #18 QUOTE_ATTR ["]
Token #19 JAVASCRIPT_ATTR [toggleRed]
Token #20 QUOTE_ATTR ["]
Token #21 HTML [>\n    This should be red... but click me to toggle it.\n  </p>\n\n  <!-- style bindings also support object and arrays -->\n  <p ]
Token #22 VUE_DIRECTIVE [:style]
Token #23 JAVASCRIPT_ATTR [=]
Token #24 QUOTE_ATTR ["]
Token #25 JAVASCRIPT_ATTR [{ color }]
Token #26 QUOTE_ATTR ["]
Token #27 HTML [ ]
Token #28 VUE_DIRECTIVE [@click]
Token #29 JAVASCRIPT_ATTR [=]
Token #30 QUOTE_ATTR ["]
Token #31 JAVASCRIPT_ATTR [toggleColor]
Token #32 QUOTE_ATTR ["]
Token #33 HTML [>\n    This should be green, and should toggle between green and blue on click.\n  </p>\n]
Token #34 HTML [</template>\n\n<style>]
Token #35 CSS [\n.red {\n  color: red;\n}\n]
Token #36 HTML [</style>]
